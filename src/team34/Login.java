/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package team34;

import java.io.File;
import java.io.IOException;
import javax.swing.text.Document;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Owner
 */
public class Login extends javax.swing.JFrame {
    
    // Constants
    private static final int MAX_CUSTOMERRECORDS = 25;
    
    // Variables and Instances of Classes
    private CustomerRecord currentCustomer;       //store an instance of current Customer which is a CustomerRecord
    private CustomerRecord customerArray[] = new CustomerRecord[MAX_CUSTOMERRECORDS];        //store all student records
    private int nextCustomer = 0;         // location of next empty position in the array
    private int numCustomers = 0;         // number of input student records
            
    private String xmlCustomerID;      // temporary storage for customerID from xml
    private String xmlName;       //temporary storage for customer name from xml
    private String xmlAddress;   //temporary storage for customer address from xml
    private String xmlPhone;          // temporary storage for customer phone from xml
    private float xmlSpending;          // temporary storage for customer spending from xml
    
    
    private Database myDatabase = new Database();       //instance of the database class

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgJobPosition = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfUsername = new javax.swing.JTextField();
        jpfPassword = new javax.swing.JPasswordField();
        jbLogin = new javax.swing.JButton();
        lMessage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rbCashier = new javax.swing.JRadioButton();
        rbChef = new javax.swing.JRadioButton();
        rbManager = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Login Form");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        jpfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpfPasswordActionPerformed(evt);
            }
        });

        jbLogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbLogin.setText("Login");
        jbLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoginActionPerformed(evt);
            }
        });

        lMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setText("Job Position:");

        bgJobPosition.add(rbCashier);
        rbCashier.setText("Cashier");
        rbCashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCashierActionPerformed(evt);
            }
        });

        bgJobPosition.add(rbChef);
        rbChef.setText("Chef");
        rbChef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbChefActionPerformed(evt);
            }
        });

        bgJobPosition.add(rbManager);
        rbManager.setText("Manager");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbCashier)
                        .addGap(18, 18, 18)
                        .addComponent(rbChef)
                        .addGap(28, 28, 28)
                        .addComponent(rbManager)))
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfUsername)
                                .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel1)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbChef)
                    .addComponent(rbManager)
                    .addComponent(rbCashier))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addComponent(jbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpfPasswordActionPerformed

    private void jbLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLoginActionPerformed
        // TODO add your handling code here:
        if (jtfUsername.getText().equals("guntoro") && jpfPassword.getText().equals("123"))
        {
            lMessage.setText("Login Success, Choose Role");
            
            if (rbCashier.isSelected())
            {
                Cashier s1 = new Cashier();
                s1.setVisible(true);        
                this.setVisible(false);
                System.out.println("Cashier selected");
                //get contents of xml file and load the array
                readFile("Customers.xml");        
                // display data in the text area
                displayData();        
                // store student data in the database
                storeData();        
                //display query data
                queryData();
            }
            
            if (rbChef.isSelected())
            {
                Kitchen s2 = new Kitchen();
                s2.setVisible(true);
                
                this.setVisible(false);
            }
            
            if (rbManager.isSelected())
            {
                Manager s3 = new Manager();
                s3.setVisible(true);
                
                this.setVisible(false);
            }
        }
        else {
            lMessage.setText("Login Error");
        }
    }//GEN-LAST:event_jbLoginActionPerformed

    private void rbCashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCashierActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_rbCashierActionPerformed

    private void rbChefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbChefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbChefActionPerformed

    //the method reads info from the input XML file, and then stores it in the customerArray[] 
    public void readFile(String filename){
        try
        {
            DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();
            builderFactory.setValidating(true);
            DocumentBuilder builder = builderFactory.newDocumentBuilder();
            Document document = builder.parse(new File(filename));
            NodeList list = document.getElementsByTagName("Customer");
           
            //This for loop gathers all the student attributes, puts them in a StudentRecord object
            //then stores that student in the StudentArray
            for(int i = 0; i < list.getLength(); i++)
            { 
                Element element = (Element)list.item(i);                
                xmlCustomerID = getCustomerID(element);
                xmlName = getName(element);
                xmlAddress = getAddress(element);
                xmlPhone = getPhone(element);
                xmlSpending = getSpending(element);
                CustomerRecord customer = new CustomerRecord(i, xmlCustomerID, xmlName, xmlAddress, xmlPhone, xmlSpending );
                
                // store student record in array
                customerArray[nextCustomer] = customer;
                
                // increment number of student records and move to next position in customerArray
                numCustomers++;
                nextCustomer++;
                
            }//end for loop loading the customerArray[] with full student records
            
        }//end try block
        catch (ParserConfigurationException parserException)
        {
            parserException.printStackTrace();   
        }//end catch block
        catch (SAXException saxException)
        {
            saxException.printStackTrace();
        }//end catch block
        catch (IOException ioException)
        {
            ioException.printStackTrace();
        }//end catch block
       
    }//end readFile()
    
    public void displayData ()
    {
        for (int i = 0; i<numCustomers; i++)
        {
            display.append(customerArray[i].toString()+"\n");
        }
    }//end displayData
 
    public void queryData ()
    {
        customertArray =  myDatabase.getQueryData();
        display.append("\nQuery Data \n");
        for (int i = 0; i<numCustomers; i++)
        {
           display.append(customerArray[i].getCustomerID()+" " + customerArray[i].getName()+"\n");
        }
    }//end displayData
 
    public void storeData ()
    {
      // create table in the database
      myDatabase.createTable();
      
      // store each Student Record in the table
      for (int i = 0; i<numCustomers; i++)
       {
           myDatabase.storeRecord(
                   customerArray[i].getCustomerID(), 
                   customerArray[i].getName(),
                   customerArray[i].getAddress(), 
                   customerArray[i].getPhone(),
                   customerArray[i].getEmail(),
                   customerArray[i].getSpending());
      }    
    }//end storeData
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgJobPosition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbLogin;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JTextField jtfUsername;
    private javax.swing.JLabel lMessage;
    private javax.swing.JRadioButton rbCashier;
    private javax.swing.JRadioButton rbChef;
    private javax.swing.JRadioButton rbManager;
    // End of variables declaration//GEN-END:variables
}
