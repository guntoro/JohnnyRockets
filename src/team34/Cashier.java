/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package team34;

import java.awt.Color;

/**
 *
 * @author Owner
 */    

public class Cashier extends javax.swing.JFrame {    
    /**
     * Creates new form Cashier
     */
    
    String Size, orderDetail="";
    String itemQuantity;
    Boolean oldCustomer;
    public static String sodaPrice;
    int foundInMenu=0;
    int indexOfOrderNumber=0;
    int currentItemNumber=0;
    int indexOfItem;
    int newOrderNumber;
    private static final int MAX_NEWORDERS = 5;
    Double TotalOrder = 0.00;
    String cOrderID, cOrderDate, cOrderCustomerID, cItemCode1, cQ1, cItemCode2, cQ2, cItemCode3, cQ3, cItemCode4, cQ4, cItemCode5, cQ5, cTotalCost;
    
    public String [][] restaurantMenu = {
        {"1001","Chicken Nugget     ", "2.00"},
        {"1002","Fries              ", "2.75"},
        {"1003","Salad              ", "3.50"},
        {"1004","Cheese Burger      ", "2.00"},
        {"1005","Bacon Cheese Burger", "2.75"},
        {"1006","Hamburger          ", "2.00"},
        {"1007","Soda        ", "1.00"},
        {"1008","Tea                ", "1.25"},
        {"1009","Coffee             ", "1.50"},
        };    
    
    public static String [][] customerOrders = {
        {"","","","","","","","","","","","","",""},
        {"","","","","","","","","","","","","",""},
        {"","","","","","","","","","","","","",""},
        {"","","","","","","","","","","","","",""},
        {"","","","","","","","","","","","","",""},
        //{cOrderID, cOrderDate, cOrderCustomerID, cItemCode1, cQ1, cItemCode2, cQ2, cItemCode3, cQ3, cItemCode4, cQ4, cItemCode5, cQ5, cTotalCost},
    };
    
    public Cashier() {        
        initComponents();
        //set property of text-fields and buttons
        jtfOrderNumber.setEditable(false);
        jbtAddItem.setEnabled(false);
        jtfNewItemCode.setEnabled(false);
        jtfNewItemDescription.setEnabled(false);
        jtaOrderDetail.setEnabled(false);
        jtfNewItemPrice.setEnabled(false);
        jtfTotalOrder.setEnabled(false);
        jbtConfirmOrder.setEnabled(false);        
        
        Login varLogin = new Login();                
        newOrderNumber=Integer.valueOf(varLogin.getLastOrderNumber());
    }  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfCustomerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfOrderNumber = new javax.swing.JTextField();
        jbtLogout = new javax.swing.JButton();
        jbtAddNewCustomer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtfNewItemCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfNewItemDescription = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcbNewItemQuantity = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jtfNewItemPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaOrderDetail = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jtfTotalOrder = new javax.swing.JTextField();
        jbtConfirmOrder = new javax.swing.JButton();
        jbtAddItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 400));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Cashier Screen");

        jLabel2.setText("Customer ID#:");

        jtfCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCustomerIDActionPerformed(evt);
            }
        });

        jLabel3.setText("Order#:");

        jtfOrderNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfOrderNumberActionPerformed(evt);
            }
        });

        jbtLogout.setText("Logout");
        jbtLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLogoutActionPerformed(evt);
            }
        });

        jbtAddNewCustomer.setText("Add New Customer");
        jbtAddNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddNewCustomerActionPerformed(evt);
            }
        });

        jLabel4.setText("Item Code");

        jtfNewItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNewItemCodeActionPerformed(evt);
            }
        });

        jLabel5.setText("Description");

        jtfNewItemDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNewItemDescriptionActionPerformed(evt);
            }
        });

        jLabel6.setText("Quantity");

        jcbNewItemQuantity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jcbNewItemQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNewItemQuantityActionPerformed(evt);
            }
        });

        jLabel7.setText("Price");

        jLabel8.setText("$");

        jtaOrderDetail.setColumns(20);
        jtaOrderDetail.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jtaOrderDetail.setRows(5);
        jScrollPane1.setViewportView(jtaOrderDetail);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Total Order $");

        jtfTotalOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTotalOrderActionPerformed(evt);
            }
        });

        jbtConfirmOrder.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtConfirmOrder.setForeground(new java.awt.Color(0, 0, 102));
        jbtConfirmOrder.setText("Confirm Order - Send to Kitchen");
        jbtConfirmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtConfirmOrderActionPerformed(evt);
            }
        });

        jbtAddItem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtAddItem.setForeground(new java.awt.Color(0, 0, 102));
        jbtAddItem.setText("Add Item");
        jbtAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbtConfirmOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfTotalOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jbtAddNewCustomer)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jtfNewItemCode))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jtfNewItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jcbNewItemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel6)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jtfNewItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jbtAddItem)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbtLogout)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtfOrderNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtAddNewCustomer)
                    .addComponent(jbtLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNewItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNewItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbNewItemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNewItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jbtAddItem))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfTotalOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtConfirmOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCustomerIDActionPerformed
        // TODO add your handling code here:        
        jtfOrderNumber.setText(Integer.toString(newOrderNumber));        
        
        //check if customerID is in customerArray
        for (int i = 0; i<Login.numCustomers; i++){            
            if (jtfCustomerID.getText().equals(Login.customerArray[i].getCustomerID())){
                oldCustomer=true;
                i=999; //exit from loop
            }
            else oldCustomer=false;             
        }
        if (oldCustomer==false) jtfCustomerID.setBackground(Color.red);  //warn cashier CustomerID not found in database/customerArray
        else {
            //set property of text-fields and buttons
            jtfCustomerID.setBackground(Color.white);
            jtfNewItemCode.setEnabled(true);
            jtfNewItemDescription.setEnabled(true);
            jtaOrderDetail.setEnabled(true);
            jtfNewItemPrice.setEnabled(true);
            jtfTotalOrder.setEnabled(true);
            newOrderNumber++;
        }         
    }//GEN-LAST:event_jtfCustomerIDActionPerformed

    private void jbtAddNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddNewCustomerActionPerformed
        AddCustomer s1 = new AddCustomer();
        s1.setVisible(true);         
    }//GEN-LAST:event_jbtAddNewCustomerActionPerformed

    private void jbtLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLogoutActionPerformed
        Login s2 = new Login();
        s2.setVisible(true);        
        this.setVisible(false);
    }//GEN-LAST:event_jbtLogoutActionPerformed

    private void jcbNewItemQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNewItemQuantityActionPerformed
        // TODO add your handling code here:        
        Double x;
        x = Double.valueOf(restaurantMenu[foundInMenu][2]);
        String y = (String)jcbNewItemQuantity.getSelectedItem();
        jtfNewItemPrice.setText(String.valueOf(x*(Double.valueOf(y))));        
    }//GEN-LAST:event_jcbNewItemQuantityActionPerformed
    
    private void jtfNewItemDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNewItemDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNewItemDescriptionActionPerformed
        
    private void jtfNewItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNewItemCodeActionPerformed
        // TODO add your handling code here:         
        for (int i = 0; i < 9; i++) {
            if (jtfNewItemCode.getText().equals(restaurantMenu[i][0])){
                foundInMenu=i;
                
                //pop-up beverage selection window
                if (jtfNewItemCode.getText().equals("1007")){   
                    Drink s3 = new Drink();
                    s3.setVisible(true);                    
                }
                i=10;   //to exit from loop
                jbtAddItem.setEnabled(true);
            }                
            else foundInMenu=99; //flag index for not found in menu
        }        
        if (foundInMenu<99) {   //foundInMenu is index location of the array menu where ItemCode match         
            jtfNewItemDescription.setText(restaurantMenu[foundInMenu][1]);
            jtfNewItemPrice.setText(restaurantMenu[foundInMenu][2]);
            jtfNewItemCode.setBackground(Color.white);
        }
            else {
            jtfNewItemDescription.setText("Item Code NOT FOUND");
            jtfNewItemCode.setBackground(Color.red);
            jbtAddItem.setEnabled(false); 
        }      
    }//GEN-LAST:event_jtfNewItemCodeActionPerformed
     
    private void jbtConfirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtConfirmOrderActionPerformed
        // TODO add your handling code here:
        for (int i=0; i<5; i++){
            for (int j=0; j<13; j++){
                System.out.print(customerOrders[i][j]+", ");
            }
            System.out.println();
        }
        //set property of text-fields and buttons
        jtfCustomerID.setText("");
        jtfOrderNumber.setText("");
        jtaOrderDetail.setText("");
        jtfTotalOrder.setText("");
        orderDetail="";
        jtfCustomerID.setEditable(true);
        jtfNewItemCode.setEnabled(false);
        jtfNewItemDescription.setEnabled(false);
        jtaOrderDetail.setEnabled(false);
        jtfNewItemPrice.setEnabled(false);
        jtfTotalOrder.setEnabled(false);
        jbtConfirmOrder.setEnabled(false);
        
        //adjust new value
        indexOfOrderNumber++;
        indexOfItem=0;
        TotalOrder=0.00;
        
    }//GEN-LAST:event_jbtConfirmOrderActionPerformed

    private void jtfOrderNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfOrderNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfOrderNumberActionPerformed

    private void jbtAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddItemActionPerformed
        // TODO add your handling code here:
        double sodaSizePrice;               //variable to calculate soda price * quantity
        jtfCustomerID.setEditable(false);
        jbtAddItem.setEnabled(false);
        jbtConfirmOrder.setEnabled(true);
        Size = Drink.sodaSize;
        if (jtfNewItemCode.getText().equals("1007")){  //if itemCode entered is for soda, adjust the price
            jtfNewItemPrice.setText(sodaPrice);
            sodaSizePrice=Double.valueOf(sodaPrice)*Double.valueOf((String)jcbNewItemQuantity.getSelectedItem());
            jtfNewItemPrice.setText(Double.toString(sodaSizePrice));
            orderDetail=(orderDetail+jtfNewItemCode.getText()+ "\t" + jtfNewItemDescription.getText()+Size + "\t" + jcbNewItemQuantity.getSelectedItem()+ "\t" + jtfNewItemPrice.getText()+ "\n");
        }
        else 
            orderDetail=(orderDetail+jtfNewItemCode.getText()+ "\t" + jtfNewItemDescription.getText() + "\t" + jcbNewItemQuantity.getSelectedItem()+ "\t" + jtfNewItemPrice.getText()+ "\n");
        jtaOrderDetail.setText(orderDetail);
        
        //calculate Total Order
        TotalOrder = TotalOrder + Double.valueOf(jtfNewItemPrice.getText());
        jtfTotalOrder.setText(String.valueOf(TotalOrder));
        itemQuantity = (String) jcbNewItemQuantity.getSelectedItem();
        
        //Write one order into customerOrders array
        recordOneOrderDetail(jtfOrderNumber.getText(), "20141211",jtfCustomerID.getText(), jtfNewItemCode.getText(),itemQuantity, String.valueOf(TotalOrder), indexOfItem); //change 11111111 with jcbNewItemQuantity.getSelectedItem()
        
        //set property of text-fields and buttons
        jtfNewItemCode.setText("");
        jtfNewItemDescription.setText("");
        jcbNewItemQuantity.setSelectedItem("1");
        jtfNewItemPrice.setText("");
        Drink.sodaSize = "";
        indexOfItem++;
    }//GEN-LAST:event_jbtAddItemActionPerformed

    private void jtfTotalOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTotalOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTotalOrderActionPerformed

    public  void recordOneOrderDetail(String xOrderID, String xOrderDate, String xOrderCustomerID, String xItemCode, String xQn, String xTotalCost, int xIndexOfItem){
        
        //Order or information in array: xOrderID, xOrderDate, xOrderCustomerID, xItemCode1, xQ1, xItemCode2, xQ2, xItemCode3, xQ3, xItemCode4, xQ4, xItemCode5, xQ5, xTotalCost
        customerOrders[indexOfOrderNumber][0] = xOrderID;
        customerOrders[indexOfOrderNumber][1] = xOrderDate;
        customerOrders[indexOfOrderNumber][2] = xOrderCustomerID;
        if (xIndexOfItem==0){
            customerOrders[indexOfOrderNumber][3] = xItemCode;
            customerOrders[indexOfOrderNumber][4] = xQn;
        }
        if (xIndexOfItem==1){
            customerOrders[indexOfOrderNumber][5] = xItemCode;
            customerOrders[indexOfOrderNumber][6] = xQn;
        }
        if (xIndexOfItem==2){
            customerOrders[indexOfOrderNumber][7] = xItemCode;
            customerOrders[indexOfOrderNumber][8] = xQn;
        }
        if (xIndexOfItem==3){
            customerOrders[indexOfOrderNumber][9] = xItemCode;
            customerOrders[indexOfOrderNumber][10] = xQn;
        }
        if (xIndexOfItem==4){
            customerOrders[indexOfOrderNumber][11] = xItemCode;
            customerOrders[indexOfOrderNumber][12] = xQn;
        }
        customerOrders[indexOfOrderNumber][12] = xTotalCost;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cashier().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAddItem;
    private javax.swing.JButton jbtAddNewCustomer;
    private javax.swing.JButton jbtConfirmOrder;
    private javax.swing.JButton jbtLogout;
    private javax.swing.JComboBox jcbNewItemQuantity;
    private javax.swing.JTextArea jtaOrderDetail;
    private javax.swing.JTextField jtfCustomerID;
    private javax.swing.JTextField jtfNewItemCode;
    private javax.swing.JTextField jtfNewItemDescription;
    private javax.swing.JTextField jtfNewItemPrice;
    private javax.swing.JTextField jtfOrderNumber;
    private javax.swing.JTextField jtfTotalOrder;
    // End of variables declaration//GEN-END:variables
}
