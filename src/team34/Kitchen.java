/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package team34;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author Daniel2
 */
public class Kitchen extends javax.swing.JFrame {

    /**
     * Creates new form Kitchen2
     */
    
    // Varibles that will be used to hold codes, set to hard locals
    // for now. -Dan
    String baconCheeseburger = "Bacon Cheeseburger";
    String cheeseBurger = "Cheeseburger";
    String hamburger = "Hamburger";
    String fries = "Fries";
    String cheeseFries = "Cheese Fries";
    String curlyFries = "Curly Fries";
    String chickenTenders = "Chicken Tenders";
    String pepsi = "Pepsi";
    String coke = "Coke";
    String icedTea = "Iced Tea";
    String order1 = "0001";
    String order2 = "0002";
    String order3 = "0003";
    
    Connection con;
    Statement st;
    ResultSet rs;
    
    public String [][] restaurantMenu = {
        {"1001","Chicken Nugget     ", "2.00"},
        {"1002","Fries              ", "2.75"},
        {"1003","Salad              ", "3.50"},
        {"1004","Cheese Burger      ", "2.00"},
        {"1005","Bacon Cheese Burger", "2.75"},
        {"1006","Hamburger          ", "2.00"},
        {"1007","Soda               ", "1.00"},
        {"1008","Tea                ", "1.25"},
        {"1009","Coffee             ", "1.50"},
        };
    
    public String [][] customerOrders = Cashier.customerOrders;
        
    public String[] items = new String[]{"", "", "", "", ""};
    
    
    public Kitchen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        order1code2tf = new java.awt.TextField();
        button3 = new java.awt.Button();
        order1code3tf = new java.awt.TextField();
        button5 = new java.awt.Button();
        button6 = new java.awt.Button();
        order1code4tf = new java.awt.TextField();
        button7 = new java.awt.Button();
        order1code5tf = new java.awt.TextField();
        button8 = new java.awt.Button();
        o1c2destf = new java.awt.TextField();
        button9 = new java.awt.Button();
        o1c3destf = new java.awt.TextField();
        button10 = new java.awt.Button();
        o1c4destf = new java.awt.TextField();
        o1c1quantf = new java.awt.TextField();
        o1c5destf = new java.awt.TextField();
        o1c3quantf = new java.awt.TextField();
        o1c1destf = new java.awt.TextField();
        o1c4quantf = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        order1Numbertf = new java.awt.TextField();
        o1c5quantf = new java.awt.TextField();
        jLabel3 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        jLabel4 = new javax.swing.JLabel();
        button2 = new java.awt.Button();
        jLabel2 = new javax.swing.JLabel();
        order1code1tf = new java.awt.TextField();
        button4 = new java.awt.Button();
        button11 = new java.awt.Button();
        button12 = new java.awt.Button();
        jLabel5 = new javax.swing.JLabel();
        button13 = new java.awt.Button();
        jLabel6 = new javax.swing.JLabel();
        order2code1tf = new java.awt.TextField();
        button14 = new java.awt.Button();
        order2code4tf = new java.awt.TextField();
        button15 = new java.awt.Button();
        order2code5tf = new java.awt.TextField();
        button16 = new java.awt.Button();
        o2c2destf = new java.awt.TextField();
        button17 = new java.awt.Button();
        o2c3destf = new java.awt.TextField();
        button18 = new java.awt.Button();
        o2c4destf = new java.awt.TextField();
        o2c1quantf = new java.awt.TextField();
        o2c5destf = new java.awt.TextField();
        o2c3quantf = new java.awt.TextField();
        o2c1destf = new java.awt.TextField();
        o2c4quantf = new java.awt.TextField();
        order2Numbertf = new java.awt.TextField();
        o2c5quantf = new java.awt.TextField();
        jLabel7 = new javax.swing.JLabel();
        button19 = new java.awt.Button();
        order2code2tf = new java.awt.TextField();
        button20 = new java.awt.Button();
        order2code3tf = new java.awt.TextField();
        refreshb = new javax.swing.JButton();
        logOutb = new javax.swing.JButton();
        o2c2quantf = new java.awt.TextField();
        o1c2quantf = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        order1code2tf.setEditable(false);

        button3.setLabel("?");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        order1code3tf.setEditable(false);

        button5.setLabel("?");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setLabel("CHK");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        order1code4tf.setEditable(false);

        button7.setLabel("CHK");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        order1code5tf.setEditable(false);

        button8.setLabel("CHK");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        o1c2destf.setEditable(false);

        button9.setLabel("CHK");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        o1c3destf.setEditable(false);

        button10.setLabel("CHK");
        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });

        o1c4destf.setEditable(false);

        o1c1quantf.setEditable(false);
        o1c1quantf.setText("1");

        o1c5destf.setEditable(false);

        o1c3quantf.setEditable(false);
        o1c3quantf.setText("1");

        o1c1destf.setEditable(false);

        o1c4quantf.setEditable(false);
        o1c4quantf.setText("1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Kitchen Screen");

        order1Numbertf.setEditable(false);
        order1Numbertf.setText("Order#");

        o1c5quantf.setEditable(false);
        o1c5quantf.setText("1");

        jLabel3.setText("Description");

        button1.setLabel("?");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        button2.setLabel("?");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Code");

        order1code1tf.setEditable(false);

        button4.setLabel("?");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button11.setLabel("?");
        button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button11ActionPerformed(evt);
            }
        });

        button12.setLabel("CHK");
        button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button12ActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantity");

        button13.setLabel("?");
        button13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button13ActionPerformed(evt);
            }
        });

        jLabel6.setText("Code");

        order2code1tf.setEditable(false);

        button14.setLabel("?");
        button14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button14ActionPerformed(evt);
            }
        });

        order2code4tf.setEditable(false);

        button15.setLabel("CHK");
        button15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button15ActionPerformed(evt);
            }
        });

        order2code5tf.setEditable(false);

        button16.setLabel("CHK");
        button16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button16ActionPerformed(evt);
            }
        });

        o2c2destf.setEditable(false);

        button17.setLabel("CHK");
        button17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button17ActionPerformed(evt);
            }
        });

        o2c3destf.setEditable(false);

        button18.setLabel("CHK");
        button18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button18ActionPerformed(evt);
            }
        });

        o2c4destf.setEditable(false);

        o2c1quantf.setEditable(false);
        o2c1quantf.setText("1");

        o2c5destf.setEditable(false);

        o2c3quantf.setEditable(false);
        o2c3quantf.setText("1");

        o2c1destf.setEditable(false);

        o2c4quantf.setEditable(false);
        o2c4quantf.setText("1");

        order2Numbertf.setEditable(false);
        order2Numbertf.setText("Order#");

        o2c5quantf.setEditable(false);
        o2c5quantf.setText("1");

        jLabel7.setText("Description");

        button19.setLabel("?");
        button19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button19ActionPerformed(evt);
            }
        });

        order2code2tf.setEditable(false);

        button20.setLabel("?");
        button20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button20ActionPerformed(evt);
            }
        });

        order2code3tf.setEditable(false);

        refreshb.setText("Refresh");
        refreshb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbActionPerformed(evt);
            }
        });

        logOutb.setText("Log Out");
        logOutb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutbActionPerformed(evt);
            }
        });

        o2c2quantf.setEditable(false);
        o2c2quantf.setText("1");

        o1c2quantf.setEditable(false);
        o1c2quantf.setText("1");

        jButton1.setText("ALL DONE");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("ALL DONE");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(order2Numbertf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(order1Numbertf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logOutb, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order1code2tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o1c2destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order1code3tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o1c3destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order1code4tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o1c4destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order1code5tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o1c5destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(order1code1tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(o1c1destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o1c4quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o1c5quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(o1c1quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(o1c2quantf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(o1c3quantf, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order2code2tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o2c2destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order2code3tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o2c3destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order2code4tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o2c4destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(order2code5tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(o2c5destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(order2code1tf, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(o2c1destf, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o2c1quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o2c2quantf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o2c3quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o2c4quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(o2c5quantf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(order1Numbertf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(order1code1tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(o1c1destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(o1c1quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(o1c2destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(order1code2tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(o1c3destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(order1code3tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(order1code4tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(o1c4destf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(button3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(o1c3quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(o1c4quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(order1code5tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(o1c5destf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(o1c5quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(o1c2quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(order2Numbertf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(order2code1tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(o2c1destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(o2c1quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(o2c2destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(order2code2tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(o2c3destf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(order2code3tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(order2code4tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(o2c4destf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(button20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(button17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(o2c3quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(o2c4quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(order2code5tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(o2c5destf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(o2c5quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(o2c2quantf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshb)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutbActionPerformed
        Login s1 = new Login();
        s1.setVisible(true);
        
        this.setVisible(false);
    }//GEN-LAST:event_logOutbActionPerformed

    private void refreshbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbActionPerformed
        
        
        order1Numbertf.setText(customerOrders[0][0]);
        order1code1tf.setText(customerOrders[0][3]);
        order1code2tf.setText(customerOrders[0][5]);
        order1code3tf.setText(customerOrders[0][7]);
        order1code4tf.setText(customerOrders[0][9]);
        order1code5tf.setText(customerOrders[0][11]);
        o1c1quantf.setText(customerOrders[0][4]);
        o1c2quantf.setText(customerOrders[0][6]);
        o1c3quantf.setText(customerOrders[0][8]);
        o1c4quantf.setText(customerOrders[0][10]);
        o1c5quantf.setText(customerOrders[0][12]);
        
        order2Numbertf.setText(customerOrders[1][0]);
        order2code1tf.setText(customerOrders[1][3]);
        order2code2tf.setText(customerOrders[1][5]);
        order2code3tf.setText(customerOrders[1][7]);
        order2code4tf.setText(customerOrders[1][9]);
        order2code5tf.setText(customerOrders[1][11]);
        o2c1quantf.setText(customerOrders[1][4]);
        o2c2quantf.setText(customerOrders[1][6]);
        o2c3quantf.setText(customerOrders[1][8]);
        o2c4quantf.setText(customerOrders[1][10]);
        o2c5quantf.setText(customerOrders[1][12]);
        
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        refreshb.setEnabled(false);
    
       
    }//GEN-LAST:event_refreshbActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        String foodHolder = o1c1destf.getText();
        String orderFoodQuantity = o1c1quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o1c1destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o1c1destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }    
        
    }//GEN-LAST:event_button6ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if (order1code1tf.getText().equals("1001"))
        {
            o1c1destf.setText("Chicken Nugget");
        }
        
        if (order1code1tf.getText().equals("1002"))
        {
            o1c1destf.setText("Fries");
        }
        
        if (order1code1tf.getText().equals("1003"))
        {
            o1c1destf.setText("Salad");
        }
        
        if (order1code1tf.getText().equals("1004"))
        {
            o1c1destf.setText("Cheese Burger");
        }
        
        if (order1code1tf.getText().equals("1005"))
        {
            o1c1destf.setText("Bacon Cheese Burger");
        }
        
        if (order1code1tf.getText().equals("1006"))
        {
            o1c1destf.setText("Hamburger");
        }
        
        if (order1code1tf.getText().equals("1007"))
        {
            o1c1destf.setText("Soda");
        }
        
        if (order1code1tf.getText().equals("1008"))
        {
            o1c1destf.setText("Tea");
        }
        
        if (order1code1tf.getText().equals("1009"))
        {
            o1c1destf.setText("Coffee");
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
       if (order1code2tf.getText().equals("1001"))
        {
            o1c2destf.setText("Chicken Nugget");
        }
        
        if (order1code2tf.getText().equals("1002"))
        {
            o1c2destf.setText("Fries");
        }
        
        if (order1code2tf.getText().equals("1003"))
        {
            o1c2destf.setText("Salad");
        }
        
        if (order1code2tf.getText().equals("1004"))
        {
            o1c2destf.setText("Cheese Burger");
        }
        
        if (order1code2tf.getText().equals("1005"))
        {
            o1c2destf.setText("Bacon Cheese Burger");
        }
        
        if (order1code2tf.getText().equals("1006"))
        {
            o1c2destf.setText("Hamburger");
        }
        
        if (order1code2tf.getText().equals("1007"))
        {
            o1c2destf.setText("Soda");
        }
        
        if (order1code2tf.getText().equals("1008"))
        {
            o1c2destf.setText("Tea");
        }
        
        if (order1code2tf.getText().equals("1009"))
        {
            o1c2destf.setText("Coffee");
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        if (order1code3tf.getText().equals("1001"))
        {
            o1c3destf.setText("Chicken Nugget");
        }
        
        if (order1code3tf.getText().equals("1002"))
        {
            o1c3destf.setText("Fries");
        }
        
        if (order1code3tf.getText().equals("1003"))
        {
            o1c3destf.setText("Salad");
        }
        
        if (order1code3tf.getText().equals("1004"))
        {
            o1c3destf.setText("Cheese Burger");
        }
        
        if (order1code3tf.getText().equals("1005"))
        {
            o1c3destf.setText("Bacon Cheese Burger");
        }
        
        if (order1code3tf.getText().equals("1006"))
        {
            o1c3destf.setText("Hamburger");
        }
        
        if (order1code3tf.getText().equals("1007"))
        {
            o1c3destf.setText("Soda");
        }
        
        if (order1code3tf.getText().equals("1008"))
        {
            o1c3destf.setText("Tea");
        }
        
        if (order1code3tf.getText().equals("1009"))
        {
            o1c3destf.setText("Coffee");
        }
    }//GEN-LAST:event_button4ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        if (order1code4tf.getText().equals("1001"))
        {
            o1c4destf.setText("Chicken Nugget");
        }
        
        if (order1code4tf.getText().equals("1002"))
        {
            o1c4destf.setText("Fries");
        }
        
        if (order1code4tf.getText().equals("1003"))
        {
            o1c4destf.setText("Salad");
        }
        
        if (order1code4tf.getText().equals("1004"))
        {
            o1c4destf.setText("Cheese Burger");
        }
        
        if (order1code4tf.getText().equals("1005"))
        {
            o1c4destf.setText("Bacon Cheese Burger");
        }
        
        if (order1code4tf.getText().equals("1006"))
        {
            o1c4destf.setText("Hamburger");
        }
        
        if (order1code4tf.getText().equals("1007"))
        {
            o1c4destf.setText("Soda");
        }
        
        if (order1code4tf.getText().equals("1008"))
        {
            o1c4destf.setText("Tea");
        }
        
        if (order1code4tf.getText().equals("1009"))
        {
            o1c4destf.setText("Coffee");
        }
    }//GEN-LAST:event_button3ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        if (order1code5tf.getText().equals("1001"))
        {
            o1c5destf.setText("Chicken Nugget");
        }
        
        if (order1code5tf.getText().equals("1002"))
        {
            o1c5destf.setText("Fries");
        }
        
        if (order1code5tf.getText().equals("1003"))
        {
            o1c5destf.setText("Salad");
        }
        
        if (order1code5tf.getText().equals("1004"))
        {
            o1c5destf.setText("Cheese Burger");
        }
        
        if (order1code5tf.getText().equals("1005"))
        {
            o1c5destf.setText("Bacon Cheese Burger");
        }
        
        if (order1code5tf.getText().equals("1006"))
        {
            o1c5destf.setText("Hamburger");
        }
        
        if (order1code5tf.getText().equals("1007"))
        {
            o1c5destf.setText("Soda");
        }
        
        if (order1code5tf.getText().equals("1008"))
        {
            o1c5destf.setText("Tea");
        }
        
        if (order1code5tf.getText().equals("1009"))
        {
            o1c5destf.setText("Coffee");
        }
    }//GEN-LAST:event_button5ActionPerformed

    private void button19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button19ActionPerformed
        if (order2code1tf.getText().equals("1001"))
        {
            o2c1destf.setText("Chicken Nugget");
        }
        
        if (order2code1tf.getText().equals("1002"))
        {
            o2c1destf.setText("Fries");
        }
        
        if (order2code1tf.getText().equals("1003"))
        {
            o2c1destf.setText("Salad");
        }
        
        if (order2code1tf.getText().equals("1004"))
        {
            o2c1destf.setText("Cheese Burger");
        }
        
        if (order2code1tf.getText().equals("1005"))
        {
            o2c1destf.setText("Bacon Cheese Burger");
        }
        
        if (order2code1tf.getText().equals("1006"))
        {
            o2c1destf.setText("Hamburger");
        }
        
        if (order2code1tf.getText().equals("1007"))
        {
            o2c1destf.setText("Soda");
        }
        
        if (order2code1tf.getText().equals("1008"))
        {
            o2c1destf.setText("Tea");
        }
        
        if (order2code1tf.getText().equals("1009"))
        {
            o2c1destf.setText("Coffee");
        }
    }//GEN-LAST:event_button19ActionPerformed

    private void button13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button13ActionPerformed
        if (order2code2tf.getText().equals("1001"))
        {
            o2c2destf.setText("Chicken Nugget");
        }
        
        if (order2code2tf.getText().equals("1002"))
        {
            o2c2destf.setText("Fries");
        }
        
        if (order2code2tf.getText().equals("1003"))
        {
            o2c2destf.setText("Salad");
        }
        
        if (order2code2tf.getText().equals("1004"))
        {
            o2c2destf.setText("Cheese Burger");
        }
        
        if (order2code2tf.getText().equals("1005"))
        {
            o2c2destf.setText("Bacon Cheese Burger");
        }
        
        if (order2code2tf.getText().equals("1006"))
        {
            o2c2destf.setText("Hamburger");
        }
        
        if (order2code2tf.getText().equals("1007"))
        {
            o2c2destf.setText("Soda");
        }
        
        if (order2code2tf.getText().equals("1008"))
        {
            o2c2destf.setText("Tea");
        }
        
        if (order2code2tf.getText().equals("1009"))
        {
            o2c2destf.setText("Coffee");
        }
    }//GEN-LAST:event_button13ActionPerformed

    private void button14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button14ActionPerformed
        if (order2code3tf.getText().equals("1001"))
        {
            o2c3destf.setText("Chicken Nugget");
        }
        
        if (order2code3tf.getText().equals("1002"))
        {
            o2c3destf.setText("Fries");
        }
        
        if (order2code3tf.getText().equals("1003"))
        {
            o2c3destf.setText("Salad");
        }
        
        if (order2code3tf.getText().equals("1004"))
        {
            o2c3destf.setText("Cheese Burger");
        }
        
        if (order2code3tf.getText().equals("1005"))
        {
            o2c3destf.setText("Bacon Cheese Burger");
        }
        
        if (order2code3tf.getText().equals("1006"))
        {
            o2c3destf.setText("Hamburger");
        }
        
        if (order2code3tf.getText().equals("1007"))
        {
            o2c3destf.setText("Soda");
        }
        
        if (order2code3tf.getText().equals("1008"))
        {
            o2c3destf.setText("Tea");
        }
        
        if (order2code3tf.getText().equals("1009"))
        {
            o2c3destf.setText("Coffee");
        }
    }//GEN-LAST:event_button14ActionPerformed

    private void button20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button20ActionPerformed
        if (order2code4tf.getText().equals("1001"))
        {
            o2c4destf.setText("Chicken Nugget");
        }
        
        if (order2code4tf.getText().equals("1002"))
        {
            o2c4destf.setText("Fries");
        }
        
        if (order2code4tf.getText().equals("1003"))
        {
            o2c4destf.setText("Salad");
        }
        
        if (order2code4tf.getText().equals("1004"))
        {
            o2c4destf.setText("Cheese Burger");
        }
        
        if (order2code4tf.getText().equals("1005"))
        {
            o2c4destf.setText("Bacon Cheese Burger");
        }
        
        if (order2code4tf.getText().equals("1006"))
        {
            o2c4destf.setText("Hamburger");
        }
        
        if (order2code4tf.getText().equals("1007"))
        {
            o2c4destf.setText("Soda");
        }
        
        if (order2code4tf.getText().equals("1008"))
        {
            o2c4destf.setText("Tea");
        }
        
        if (order2code4tf.getText().equals("1009"))
        {
            o2c4destf.setText("Coffee");
        }
    }//GEN-LAST:event_button20ActionPerformed

    private void button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button11ActionPerformed
        if (order2code5tf.getText().equals("1001"))
        {
            o2c5destf.setText("Chicken Nugget");
        }
        
        if (order2code5tf.getText().equals("1002"))
        {
            o2c5destf.setText("Fries");
        }
        
        if (order2code5tf.getText().equals("1003"))
        {
            o2c5destf.setText("Salad");
        }
        
        if (order2code5tf.getText().equals("1004"))
        {
            o2c5destf.setText("Cheese Burger");
        }
        
        if (order2code5tf.getText().equals("1005"))
        {
            o2c5destf.setText("Bacon Cheese Burger");
        }
        
        if (order2code5tf.getText().equals("1006"))
        {
            o2c5destf.setText("Hamburger");
        }
        
        if (order2code5tf.getText().equals("1007"))
        {
            o2c5destf.setText("Soda");
        }
        
        if (order2code5tf.getText().equals("1008"))
        {
            o2c5destf.setText("Tea");
        }
        
        if (order2code5tf.getText().equals("1009"))
        {
            o2c5destf.setText("Coffee");
        }
    }//GEN-LAST:event_button11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        String orderID = customerOrders[0][0];
        String orderDate = customerOrders[0][1];
        String custID = customerOrders[0][2];
        String itemCode1 = customerOrders[0][3];
        String itemQuantity1 = customerOrders[0][4];
        String itemCode2 = customerOrders[0][5];
        String itemQuantity2 = customerOrders[0][6];
        String itemCode3 = customerOrders[0][7];
        String itemQuantity3 = customerOrders[0][8];
        String itemCode4 = customerOrders[0][9];
        String itemQuantity4 = customerOrders[0][10];
        String itemCode5 = customerOrders[0][11];
        String itemQuantity5 = customerOrders[0][12];
        String orderTotal = customerOrders[0][13];
        
        Database.storeOrderRecord(orderID, orderDate, custID, itemCode1, itemQuantity1, itemCode2, itemQuantity2, itemCode3, itemQuantity3, itemCode4, itemQuantity4, itemCode5, itemQuantity5, orderTotal);
        
        order1Numbertf.setText("");
        order1code1tf.setText("");
        order1code2tf.setText("");
        order1code3tf.setText("");
        order1code4tf.setText("");
        order1code5tf.setText("");
        o1c1destf.setText("");
        o1c2destf.setText("");
        o1c3destf.setText("");
        o1c4destf.setText("");
        o1c5destf.setText("");
        
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String orderID = customerOrders[1][0];
        String orderDate = customerOrders[1][1];
        String custID = customerOrders[1][2];
        String itemCode1 = customerOrders[1][3];
        String itemQuantity1 = customerOrders[1][4];
        String itemCode2 = customerOrders[1][5];
        String itemQuantity2 = customerOrders[1][6];
        String itemCode3 = customerOrders[1][7];
        String itemQuantity3 = customerOrders[1][8];
        String itemCode4 = customerOrders[1][9];
        String itemQuantity4 = customerOrders[1][10];
        String itemCode5 = customerOrders[1][11];
        String itemQuantity5 = customerOrders[1][12];
        String orderTotal = customerOrders[1][13];
        
        Database.storeOrderRecord(orderID, orderDate, custID, itemCode1, itemQuantity1, itemCode2, itemQuantity2, itemCode3, itemQuantity3, itemCode4, itemQuantity4, itemCode5, itemQuantity5, orderTotal);
        
        order2Numbertf.setText("");
        order2code1tf.setText("");
        order2code2tf.setText("");
        order2code3tf.setText("");
        order2code4tf.setText("");
        order2code5tf.setText("");
        o2c1destf.setText("");
        o2c2destf.setText("");
        o2c3destf.setText("");
        o2c4destf.setText("");
        o2c5destf.setText("");
        
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        String foodHolder = o1c2destf.getText();
        String orderFoodQuantity = o1c2quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o1c2destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o1c2destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        String foodHolder = o1c3destf.getText();
        String orderFoodQuantity = o1c3quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o1c3destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o1c3destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        String foodHolder = o1c4destf.getText();
        String orderFoodQuantity = o1c4quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o1c4destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o1c4destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button9ActionPerformed

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button10ActionPerformed
        String foodHolder = o1c5destf.getText();
        String orderFoodQuantity = o1c5quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o1c5destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o1c5destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button10ActionPerformed

    private void button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button12ActionPerformed
        String foodHolder = o2c1destf.getText();
        String orderFoodQuantity = o2c1quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o2c1destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o2c1destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button12ActionPerformed

    private void button15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button15ActionPerformed
        String foodHolder = o2c2destf.getText();
        String orderFoodQuantity = o2c2quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o2c2destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o2c2destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button15ActionPerformed

    private void button16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button16ActionPerformed
        String foodHolder = o2c3destf.getText();
        String orderFoodQuantity = o2c3quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o2c3destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o2c3destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button16ActionPerformed

    private void button17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button17ActionPerformed
        String foodHolder = o2c4destf.getText();
        String orderFoodQuantity = o2c4quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o2c4destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o2c4destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button17ActionPerformed

    private void button18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button18ActionPerformed
        String foodHolder = o2c5destf.getText();
        String orderFoodQuantity = o2c5quantf.getText();
        
        try{
            
                // load database driver class
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           
         // connect to database
         Connection con = DriverManager.getConnection("jdbc:odbc:RestaurantDB");
         
         Statement stmt = (Statement) con.createStatement();
         
         //Select "customer" if the ID I entered matches one in the database.
         String SQL = "SELECT * FROM Inventory WHERE IngName='" + foodHolder + "'";
         
         //Store returned results in rs.
         ResultSet rs = stmt.executeQuery(SQL);
         
         
         //Use results in rs to populate text fields.
         while(rs.next())
         {
             String checkStock = rs.getString("Stock");
             
             if (Integer.parseInt(checkStock) >= Integer.parseInt(orderFoodQuantity))
             {
                 o2c5destf.setText("Enough in Stock!");
             }
             
             else
             {
                 o2c5destf.setText("Out of stock, order more!");
             }
         }
         
         stmt.close();
         con.close();
         
        }catch(Exception e)
        {
            System.out.println("ERROR: " + e.getMessage());
        }  
    }//GEN-LAST:event_button18ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kitchen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kitchen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kitchen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kitchen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kitchen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button10;
    private java.awt.Button button11;
    private java.awt.Button button12;
    private java.awt.Button button13;
    private java.awt.Button button14;
    private java.awt.Button button15;
    private java.awt.Button button16;
    private java.awt.Button button17;
    private java.awt.Button button18;
    private java.awt.Button button19;
    private java.awt.Button button2;
    private java.awt.Button button20;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton logOutb;
    private java.awt.TextField o1c1destf;
    private java.awt.TextField o1c1quantf;
    private java.awt.TextField o1c2destf;
    private java.awt.TextField o1c2quantf;
    private java.awt.TextField o1c3destf;
    private java.awt.TextField o1c3quantf;
    private java.awt.TextField o1c4destf;
    private java.awt.TextField o1c4quantf;
    private java.awt.TextField o1c5destf;
    private java.awt.TextField o1c5quantf;
    private java.awt.TextField o2c1destf;
    private java.awt.TextField o2c1quantf;
    private java.awt.TextField o2c2destf;
    private java.awt.TextField o2c2quantf;
    private java.awt.TextField o2c3destf;
    private java.awt.TextField o2c3quantf;
    private java.awt.TextField o2c4destf;
    private java.awt.TextField o2c4quantf;
    private java.awt.TextField o2c5destf;
    private java.awt.TextField o2c5quantf;
    private java.awt.TextField order1Numbertf;
    private java.awt.TextField order1code1tf;
    private java.awt.TextField order1code2tf;
    private java.awt.TextField order1code3tf;
    private java.awt.TextField order1code4tf;
    private java.awt.TextField order1code5tf;
    private java.awt.TextField order2Numbertf;
    private java.awt.TextField order2code1tf;
    private java.awt.TextField order2code2tf;
    private java.awt.TextField order2code3tf;
    private java.awt.TextField order2code4tf;
    private java.awt.TextField order2code5tf;
    private javax.swing.JButton refreshb;
    // End of variables declaration//GEN-END:variables
}
